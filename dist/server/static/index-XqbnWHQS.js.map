{"version":3,"file":"index-XqbnWHQS.js","sources":["../../../../pages/hmac/components/main.vue","../../../../pages/hmac/components/tools.vue","../../../../pages/hmac/components/description.vue","../../../../pages/hmac/index.vue"],"sourcesContent":["<template>\n  <!-- 主要功能区 -->\n  <div\n    class=\"bg-white rounded-xl shadow-sm border border-slate-200 p-6 md:p-8 space-y-6\"\n  >\n    <!-- 密钥输入 -->\n    <div>\n      <div class=\"flex justify-between items-center mb-2\">\n        <label class=\"text-sm font-medium text-slate-700\">{{ t('key') }}</label>\n        <div class=\"flex space-x-2\">\n          <cc-copy-button \n            :data=\"key\"\n            class=\"text-sm text-primary-600 hover:text-primary-700\"\n          />\n          <button\n            id=\"generateKeyBtn\"\n            class=\"text-sm text-primary-600 hover:text-primary-700 flex items-center\"\n            @click=\"handleGenerateKey\"\n          >\n            <img\n              src=\"https://unpkg.com/lucide-static@latest/icons/key.svg\"\n              :alt=\"t('generateKey')\"\n              class=\"w-4 h-4 mr-1\"\n            />\n            {{ t('generateKey') }}\n          </button>\n          <button\n            id=\"pasteKeyBtn\"\n            class=\"text-sm text-primary-600 hover:text-primary-700 flex items-center\"\n            @click=\"handlePasteKey\"\n          >\n            <img\n              src=\"https://unpkg.com/lucide-static@latest/icons/clipboard.svg\"\n              :alt=\"t('paste')\"\n              class=\"w-4 h-4 mr-1\"\n            />\n            {{ t('paste') }}\n          </button>\n          <button\n            id=\"clearKeyBtn\"\n            class=\"text-sm text-slate-600 hover:text-slate-700 flex items-center\"\n            @click=\"handleClearKey\"\n          >\n            <img\n              src=\"https://unpkg.com/lucide-static@latest/icons/x.svg\"\n              :alt=\"t('clear')\"\n              class=\"w-4 h-4 mr-1\"\n            />\n            {{ t('clear') }}\n          </button>\n        </div>\n      </div>\n      <input\n        type=\"text\"\n        id=\"key\"\n        v-model=\"key\"\n        class=\"w-full rounded-lg border border-slate-300 focus:border-primary-500 focus:ring-2 focus:ring-primary-500/20 p-3 text-sm\"\n        :placeholder=\"t('keyPlaceholder')\"\n      />\n    </div>\n\n    <!-- 输入文本 -->\n    <div>\n      <div class=\"flex justify-between items-center mb-2\">\n        <label class=\"text-sm font-medium text-slate-700\">{{ t('inputText') }}</label>\n        <div class=\"flex space-x-2\">\n          <cc-copy-button \n            :data=\"input\"\n            class=\"text-sm text-primary-600 hover:text-primary-700\"\n          />\n          <button\n            id=\"pasteInputBtn\"\n            class=\"text-sm text-primary-600 hover:text-primary-700 flex items-center\"\n            @click=\"handlePasteInput\"\n          >\n            <img\n              src=\"https://unpkg.com/lucide-static@latest/icons/clipboard.svg\"\n              :alt=\"t('paste')\"\n              class=\"w-4 h-4 mr-1\"\n            />\n            {{ t('paste') }}\n          </button>\n          <button\n            id=\"clearInputBtn\"\n            class=\"text-sm text-slate-600 hover:text-slate-700 flex items-center\"\n            @click=\"handleClearInput\"\n          >\n            <img\n              src=\"https://unpkg.com/lucide-static@latest/icons/x.svg\"\n              :alt=\"t('clear')\"\n              class=\"w-4 h-4 mr-1\"\n            />\n            {{ t('clear') }}\n          </button>\n        </div>\n      </div>\n      <textarea\n        id=\"input\"\n        v-model=\"input\"\n        rows=\"6\"\n        class=\"w-full rounded-lg border border-slate-300 focus:border-primary-500 focus:ring-2 focus:ring-primary-500/20 p-3 text-sm\"\n        :placeholder=\"t('inputPlaceholder')\"\n      ></textarea>\n    </div>\n\n    <!-- 算法选择和输出格式（高级选项）合并到一起 -->\n    <div class=\"bg-slate-50 rounded-lg p-4\">\n      <details class=\"group\" open>\n        <summary\n          class=\"flex items-center cursor-pointer text-sm font-medium text-slate-700\"\n        >\n          <img\n            src=\"https://unpkg.com/lucide-static@latest/icons/settings-2.svg\"\n            :alt=\"t('advancedOptions')\"\n            class=\"w-4 h-4 mr-2\"\n          />\n          {{ t('advancedOptions') }}\n          <img\n            src=\"https://unpkg.com/lucide-static@latest/icons/chevron-down.svg\"\n            alt=\"展开\"\n            class=\"w-4 h-4 ml-auto transform group-open:rotate-180 transition-transform\"\n          />\n        </summary>\n        <div class=\"mt-3 space-y-4\">\n          <!-- 算法选择 -->\n          <div>\n            <p class=\"text-sm font-medium text-slate-700 mb-2\">\n              {{ t('algorithm') }}:\n            </p>\n            <div class=\"flex flex-wrap gap-4\">\n              <label class=\"flex items-center cursor-pointer\">\n                <input\n                  type=\"radio\"\n                  name=\"algorithm\"\n                  value=\"SHA256\"\n                  v-model=\"selectedAlgorithm\"\n                  class=\"form-radio text-primary-600 focus:ring-primary-500\"\n                  data-algorithm=\"SHA256\"\n                />\n                <span class=\"ml-2 text-sm text-slate-700\">HMAC-SHA256</span>\n              </label>\n              <label class=\"flex items-center cursor-pointer\">\n                <input\n                  type=\"radio\"\n                  name=\"algorithm\"\n                  value=\"SHA1\"\n                  v-model=\"selectedAlgorithm\"\n                  class=\"form-radio text-primary-600 focus:ring-primary-500\"\n                  data-algorithm=\"SHA1\"\n                />\n                <span class=\"ml-2 text-sm text-slate-700\">HMAC-SHA1</span>\n              </label>\n              <label class=\"flex items-center cursor-pointer\">\n                <input\n                  type=\"radio\"\n                  name=\"algorithm\"\n                  value=\"MD5\"\n                  v-model=\"selectedAlgorithm\"\n                  class=\"form-radio text-primary-600 focus:ring-primary-500\"\n                  data-algorithm=\"MD5\"\n                />\n                <span class=\"ml-2 text-sm text-slate-700\">HMAC-MD5</span>\n              </label>\n              <label class=\"flex items-center cursor-pointer\">\n                <input\n                  type=\"radio\"\n                  name=\"algorithm\"\n                  value=\"SHA512\"\n                  v-model=\"selectedAlgorithm\"\n                  class=\"form-radio text-primary-600 focus:ring-primary-500\"\n                  data-algorithm=\"SHA512\"\n                />\n                <span class=\"ml-2 text-sm text-slate-700\">HMAC-SHA512</span>\n              </label>\n            </div>\n          </div>\n\n          <!-- 输出格式 -->\n          <div>\n            <p class=\"text-sm font-medium text-slate-700 mb-2\">{{ t('outputFormat') }}:</p>\n            <div class=\"space-y-2\">\n              <div class=\"flex flex-wrap gap-4\">\n                <label class=\"flex items-center cursor-pointer\">\n                  <input\n                    type=\"radio\"\n                    name=\"outputFormat\"\n                    value=\"hex\"\n                    v-model=\"outputFormat\"\n                    class=\"form-radio text-primary-600 focus:ring-primary-500\"\n                  />\n                  <span class=\"ml-2 text-sm text-slate-700\">{{ t('hex') }}</span>\n                </label>\n                <label class=\"flex items-center cursor-pointer\">\n                  <input\n                    type=\"radio\"\n                    name=\"outputFormat\"\n                    value=\"base64\"\n                    v-model=\"outputFormat\"\n                    class=\"form-radio text-primary-600 focus:ring-primary-500\"\n                  />\n                  <span class=\"ml-2 text-sm text-slate-700\">{{ t('base64') }}</span>\n                </label>\n              </div>\n              <div class=\"flex items-center\" v-show=\"outputFormat === 'hex'\">\n                <label class=\"flex items-center cursor-pointer\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"uppercase\"\n                    v-model=\"uppercase\"\n                    class=\"form-checkbox text-primary-600 focus:ring-primary-500\"\n                  />\n                  <span class=\"ml-2 text-sm text-slate-700\">{{ t('uppercase') }}</span>\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n      </details>\n    </div>\n\n    <!-- 计算结果 -->\n    <div>\n      <div class=\"flex justify-between items-center mb-2\">\n        <label class=\"text-sm font-medium text-slate-700\">{{ t('result') }}</label>\n        <cc-copy-button \n          :data=\"output\"\n          class=\"text-sm text-primary-600 hover:text-primary-700\"\n        />\n      </div>\n      <div class=\"bg-slate-50 rounded-lg p-4\">\n        <pre\n          id=\"output\"\n          class=\"text-sm text-slate-800 whitespace-pre-wrap break-all min-h-[60px] flex items-center\"\n        >{{ output || t('resultPlaceholder') }}</pre>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, watch } from \"vue\";\nimport CryptoJS from 'crypto-js';\nimport { copyToClipboard, clipboardText } from \"~/utils/clipboard\";\n\nconst { t } = useI18n({\n  useScope: \"local\",\n});\n\nconst key = ref('');\nconst input = ref('');\nconst output = ref('');\nconst selectedAlgorithm = ref('SHA256');\nconst outputFormat = ref('hex');\nconst uppercase = ref(false);\n\n// 生成随机密钥\nconst generateKey = () => {\n  const randomBytes = CryptoJS.lib.WordArray.random(32);\n  key.value = randomBytes.toString(CryptoJS.enc.Hex);\n};\n\n// 计算HMAC\nconst calculateHMAC = () => {\n  if (!key.value || !input.value) {\n    output.value = '';\n    return;\n  }\n\n  let hmac;\n  switch (selectedAlgorithm.value) {\n    case 'SHA256':\n      hmac = CryptoJS.HmacSHA256(input.value, key.value);\n      break;\n    case 'SHA1':\n      hmac = CryptoJS.HmacSHA1(input.value, key.value);\n      break;\n    case 'MD5':\n      hmac = CryptoJS.HmacMD5(input.value, key.value);\n      break;\n    case 'SHA512':\n      hmac = CryptoJS.HmacSHA512(input.value, key.value);\n      break;\n  }\n\n  if (outputFormat.value === 'hex') {\n    let result = hmac.toString(CryptoJS.enc.Hex);\n    output.value = uppercase.value ? result.toUpperCase() : result;\n  } else {\n    output.value = hmac.toString(CryptoJS.enc.Base64);\n  }\n};\n\n// 事件处理\nconst handleGenerateKey = () => generateKey();\nconst handlePasteKey = async () => key.value = await clipboardText();\nconst handleClearKey = () => key.value = '';\nconst handlePasteInput = async () => input.value = await clipboardText();\nconst handleClearInput = () => input.value = '';\n\n// 监听输入变化\nwatch([key, input, selectedAlgorithm, outputFormat, uppercase], calculateHMAC);\n</script>\n\n<i18n lang=\"json\">\n{\n  \"en\": {\n    \"key\": \"Key\",\n    \"generateKey\": \"Generate Random Key\",\n    \"paste\": \"Paste\",\n    \"clear\": \"Clear\",\n    \"inputText\": \"Input Text\",\n    \"advancedOptions\": \"Advanced Options\",\n    \"algorithm\": \"HMAC Algorithm\",\n    \"outputFormat\": \"Output Format\",\n    \"hex\": \"Hexadecimal\",\n    \"base64\": \"Base64\",\n    \"uppercase\": \"Uppercase Output\",\n    \"result\": \"Result\",\n    \"copy\": \"Copy\",\n    \"keyPlaceholder\": \"Enter or generate key...\",\n    \"inputPlaceholder\": \"Enter text to calculate HMAC...\",\n    \"resultPlaceholder\": \"Enter key and text above to automatically calculate HMAC result\"\n  },\n  \"zh\": {\n    \"key\": \"密钥\",\n    \"generateKey\": \"生成随机密钥\",\n    \"paste\": \"粘贴\",\n    \"clear\": \"清空\",\n    \"inputText\": \"输入文本\",\n    \"advancedOptions\": \"高级选项\",\n    \"algorithm\": \"HMAC 算法选择\",\n    \"outputFormat\": \"输出格式\",\n    \"hex\": \"16进制\",\n    \"base64\": \"Base64\",\n    \"uppercase\": \"大写输出\",\n    \"result\": \"计算结果\",\n    \"copy\": \"复制\",\n    \"keyPlaceholder\": \"输入或生成密钥...\",\n    \"inputPlaceholder\": \"输入要计算HMAC的文本...\",\n    \"resultPlaceholder\": \"在上方输入密钥和文本后将自动计算 HMAC 结果\"\n  }\n}\n</i18n>","<template>\n  <div\n    class=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-4 gap-4 pb-6\"\n  >\n    <!-- Related Tool 1 -->\n    <tools-card\n      :href=\"$localePath('base64')\"\n      :title=\"t('base64.title')\"\n      :desc=\"t('base64.desc')\"\n      icon=\"https://unpkg.com/lucide-static@latest/icons/code.svg\"\n      alt=\"Base64\"\n    />\n\n    <!-- Related Tool 2 -->\n    <tools-card\n      :href=\"$localePath('md5')\"\n      :title=\"t('md5.title')\"\n      :desc=\"t('md5.desc')\"\n      icon=\"https://unpkg.com/lucide-static@latest/icons/key-square.svg\"\n      alt=\"md5\"\n    />\n\n    <!-- Related Tool 3 -->\n    <tools-card\n      :href=\"$localePath('url-parser')\"\n      :title=\"t('url.parser.title')\"\n      :desc=\"t('url.parser.desc')\"\n      icon=\"https://unpkg.com/lucide-static@latest/icons/link.svg\"\n      alt=\"URL Parser\"\n    />\n\n    <!-- Related Tool 4 -->\n    <tools-card\n      :href=\"$localePath('url-coder')\"\n      :title=\"t('url.coder.title')\"\n      :desc=\"t('url.coder.desc')\"\n      icon=\"https://unpkg.com/lucide-static@latest/icons/link.svg\"\n      alt=\"URL encode & decode\"\n    />\n  </div>\n</template>\n\n<script setup>\nconst { $localePath } = useNuxtApp();\n\nconst { t } = useI18n({\n  useScope: \"local\",\n});\n</script>\n\n\n<i18n lang=\"json\">\n{\n  \"en\": {\n    \"base64\": {\n      \"title\": \"Base64 Encoding\",\n      \"desc\": \"Convert text to/from Base64\"\n    },\n    \"md5\": {\n      \"title\": \"MD5 Hash\",\n      \"desc\": \"Generate MD5 hash from text\"\n    },\n    \"url\": {\n      \"parser\": {\n        \"title\": \"URL Parser\",\n        \"desc\": \"Parse and analyze URL structure\"\n      },\n      \"coder\": {\n        \"title\": \"URL Encoder/Decoder\",\n        \"desc\": \"Encode and decode URL strings\"\n      }\n    }\n  },\n  \"zh\": {\n    \"base64\": {\n      \"title\": \"Base64 编码\",\n      \"desc\": \"文本与Base64相互转换\"\n    },\n    \"md5\": {\n      \"title\": \"MD5 哈希\",\n      \"desc\": \"生成文本的MD5哈希值\"\n    },\n    \"url\": {\n      \"parser\": {\n        \"title\": \"URL 解析器\",\n        \"desc\": \"解析和分析 URL 结构\"\n      },\n      \"coder\": {\n        \"title\": \"URL 编解码\",\n        \"desc\": \"URL 字符串编码和解码\"\n      }\n    },\n    \"hmac\": {\n      \"title\": \"HMAC 生成\",\n      \"desc\": \"密钥相关哈希认证码\"\n    }\n  }\n}\n</i18n>","<template>\n<div class=\"bg-white rounded-xl shadow-sm border border-slate-200 p-6 md:p-8\">\n      <h3 class=\"text-lg font-semibold mb-4\">{{ t('title') }}</h3>\n      <div class=\"space-y-4 text-slate-600\">\n        <div class=\"flex items-start\">\n          <img src=\"https://unpkg.com/lucide-static@latest/icons/info.svg\" alt=\"说明\" class=\"w-5 h-5 text-primary-600 mr-2 mt-0.5\" />\n          <div>\n            <p class=\"font-medium text-slate-800 mb-1\">{{ t('what.title') }}</p>\n            <p>{{ t('what.description') }}</p>\n          </div>\n        </div>\n        <div class=\"flex items-start\">\n          <img src=\"https://unpkg.com/lucide-static@latest/icons/code.svg\" alt=\"技术原理\" class=\"w-5 h-5 text-primary-600 mr-2 mt-0.5\" />\n          <div>\n            <p class=\"font-medium text-slate-800 mb-1\">{{ t('principle.title') }}</p>\n            <p>{{ t('principle.description') }}</p>\n          </div>\n        </div>\n        <div class=\"flex items-start\">\n          <img src=\"https://unpkg.com/lucide-static@latest/icons/help-circle.svg\" alt=\"用途\" class=\"w-5 h-5 text-primary-600 mr-2 mt-0.5\" />\n          <div>\n            <p class=\"font-medium text-slate-800 mb-1\">{{ t('usage.title') }}</p>\n            <ul class=\"list-disc list-inside space-y-1\">\n              <li>{{ t('usage.list.0') }}</li>\n              <li>{{ t('usage.list.1') }}</li>\n              <li>{{ t('usage.list.2') }}</li>\n              <li>{{ t('usage.list.3') }}</li>\n              <li>{{ t('usage.list.4') }}</li>\n              <li>{{ t('usage.list.5') }}</li>\n            </ul>\n          </div>\n        </div>\n        <div class=\"flex items-start\">\n          <img src=\"https://unpkg.com/lucide-static@latest/icons/shield.svg\" alt=\"算法\" class=\"w-5 h-5 text-primary-600 mr-2 mt-0.5\" />\n          <div>\n            <p class=\"font-medium text-slate-800 mb-1\">{{ t('algorithms.title') }}</p>\n            <ul class=\"list-disc list-inside space-y-1\">\n              <li>\n                {{ t('algorithms.list.0.name') }}\n                <span class=\"text-sm text-slate-500\">({{ t('algorithms.list.0.note') }})</span>\n              </li>\n              <li>\n                {{ t('algorithms.list.1.name') }}\n                <span class=\"text-sm text-slate-500\">({{ t('algorithms.list.1.note') }})</span>\n              </li>\n              <li>\n                {{ t('algorithms.list.2.name') }}\n                <span class=\"text-sm text-slate-500\">({{ t('algorithms.list.2.note') }})</span>\n              </li>\n              <li>\n                {{ t('algorithms.list.3.name') }}\n                <span class=\"text-sm text-slate-500\">({{ t('algorithms.list.3.note') }})</span>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div class=\"flex items-start\">\n          <img src=\"https://unpkg.com/lucide-static@latest/icons/book-open.svg\" alt=\"使用方法\" class=\"w-5 h-5 text-primary-600 mr-2 mt-0.5\" />\n          <div>\n            <p class=\"font-medium text-slate-800 mb-1\">{{ t('howto.title') }}</p>\n            <ol class=\"list-decimal list-inside space-y-2\">\n              <li>{{ t('howto.steps.0') }}</li>\n              <li>{{ t('howto.steps.1') }}</li>\n              <li>{{ t('howto.steps.2') }}</li>\n              <li>{{ t('howto.steps.3') }}</li>\n              <li>{{ t('howto.steps.4') }}</li>\n            </ol>\n          </div>\n        </div>\n      </div>\n    </div>\n</template>\n\n<script setup>\nconst { t } = useI18n({\n  useScope: 'local'\n})\n</script>\n\n<i18n lang=\"json\">\n{\n  \"en\": {\n    \"title\": \"HMAC Generator Guide\",\n    \"what\": {\n      \"title\": \"What is HMAC?\",\n      \"description\": \"HMAC (Hash-based Message Authentication Code) is a specific type of message authentication code (MAC) involving a cryptographic hash function and a secret cryptographic key. It provides a secure way to verify both the data integrity and authenticity of a message.\"\n    },\n    \"principle\": {\n      \"title\": \"Technical Principles\",\n      \"description\": \"HMAC operates by combining a cryptographic hash function (like SHA256) with a secret key. The process involves two rounds of hashing, using inner and outer padded keys, which makes it highly resistant to various cryptographic attacks while maintaining computational efficiency.\"\n    },\n    \"usage\": {\n      \"title\": \"Common Applications\",\n      \"list\": [\n        \"API Authentication & Authorization\",\n        \"Digital Signature Generation\",\n        \"Secure Token Creation\",\n        \"Message Integrity Verification\",\n        \"Secure File Transfer Validation\",\n        \"Blockchain Transaction Signing\"\n      ]\n    },\n    \"algorithms\": {\n      \"title\": \"Supported Algorithms\",\n      \"list\": [\n        {\"name\": \"HMAC-SHA256\", \"note\": \"Recommended for general use\"},\n        {\"name\": \"HMAC-SHA512\", \"note\": \"Higher security level\"},\n        {\"name\": \"HMAC-SHA1\", \"note\": \"Legacy support\"},\n        {\"name\": \"HMAC-MD5\", \"note\": \"Not recommended for security-critical applications\"}\n      ]\n    },\n    \"howto\": {\n      \"title\": \"How to Use\",\n      \"steps\": [\n        \"Enter your message in the input field\",\n        \"Provide your secret key\",\n        \"Select your preferred hash algorithm (SHA256 recommended)\",\n        \"Click 'Generate' to create your HMAC\",\n        \"Copy the generated hash for your application\"\n      ]\n    }\n  },\n  \"zh\": {\n    \"title\": \"HMAC 生成器使用指南\",\n    \"what\": {\n      \"title\": \"什么是 HMAC？\",\n      \"description\": \"HMAC（Hash-based Message Authentication Code）是一种结合加密哈希函数和密钥的特殊消息认证码。它能够同时验证数据的完整性和真实性，是现代密码学中不可或缺的安全机制。\"\n    },\n    \"principle\": {\n      \"title\": \"技术原理\",\n      \"description\": \"HMAC 通过将密码哈希函数（如 SHA256）与密钥结合使用，采用内部和外部填充密钥进行两轮哈希运算。这种设计使其具有极强的抗密码分析攻击能力，同时保持了良好的计算效率。\"\n    },\n    \"usage\": {\n      \"title\": \"常见应用场景\",\n      \"list\": [\n        \"API 接口签名认证\",\n        \"数字签名生成与验证\",\n        \"安全令牌（Token）生成\",\n        \"消息完整性校验\",\n        \"安全文件传输验证\",\n        \"区块链交易签名\"\n      ]\n    },\n    \"algorithms\": {\n      \"title\": \"支持的算法\",\n      \"list\": [\n        {\"name\": \"HMAC-SHA256\", \"note\": \"推荐使用\"},\n        {\"name\": \"HMAC-SHA512\", \"note\": \"更高安全级别\"},\n        {\"name\": \"HMAC-SHA1\", \"note\": \"向后兼容\"},\n        {\"name\": \"HMAC-MD5\", \"note\": \"不建议用于安全关键场景\"}\n      ]\n    },\n    \"howto\": {\n      \"title\": \"使用方法\",\n      \"steps\": [\n        \"在输入框中输入需要处理的消息内容\",\n        \"填入您的密钥\",\n        \"选择所需的哈希算法（推荐 SHA256）\",\n        \"点击'生成'按钮获取 HMAC\",\n        \"复制生成的哈希值用于您的应用\"\n      ]\n    }\n  }\n}\n</i18n>","<template>\n  <page-layout-full>\n    <template #title>\n      <tools-title\n        :title=\"t('name')\"\n        icon=\"https://unpkg.com/lucide-static@latest/icons/key.svg\"\n      />\n    </template>\n\n    <template #main>\n      <Main />\n    </template>\n\n    <template #tools>\n      <Tools />\n    </template>\n\n    <template #description>\n      <Description />\n    </template>\n  </page-layout-full>\n</template>\n\n<script setup>\nimport { ref } from \"vue\";\nimport { useI18n } from \"vue-i18n\";\nimport Main from \"./components/main.vue\";\nimport Tools from \"./components/tools.vue\";\nimport Description from \"./components/description.vue\";\n\nconst { t } = useI18n({\n  useScope: \"local\",\n});\n\nimport { setupSeoMeta } from \"~/utils/seo\";\nsetupSeoMeta(useSeoMeta, t);\n</script>\n\n<i18n lang=\"json\">\n{\n  \"en\": {\n    \"name\": \"HMAC Generator\",\n    \"seo\": {\n      \"title\": \"HMAC Generator Online\",\n      \"description\": \"HMAC Generator Online is a free online tool to generate Hash-based message authentication code.\",\n      \"keywords\": \"HMAC, Generator, Online, Tool\",\n      \"name\": \"HMAC Generator\"\n    }\n  },\n  \"zh\": {\n    \"name\": \"HMAC 生成器\",\n    \"seo\": {\n      \"title\": \"HMAC 生成器在线\",\n      \"description\": \"HMAC 生成器在线是一个免费的在线工具，用于生成基于哈希的消息认证码。\",\n      \"keywords\": \"HMAC, 生成器, 在线, 工具\",\n      \"name\": \"HMAC 生成器\"\n    }\n  }\n}\n</i18n>"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoPA,UAAM,EAAE,EAAG,IAAG,QAAQ;AAAA,MACpB,UAAU;AAAA,IACZ,CAAC;AAED,UAAM,MAAM,IAAI,EAAE;AAClB,UAAM,QAAQ,IAAI,EAAE;AACpB,UAAM,SAAS,IAAI,EAAE;AACrB,UAAM,oBAAoB,IAAI,QAAQ;AACtC,UAAM,eAAe,IAAI,KAAK;AAC9B,UAAM,YAAY,IAAI,KAAK;AAS3B,UAAM,gBAAgB,MAAM;AAC1B,UAAI,CAAC,IAAI,SAAS,CAAC,MAAM,OAAO;AAC9B,eAAO,QAAQ;AACf;AAAA,MACJ;AAEE,UAAI;AACJ,cAAQ,kBAAkB,OAAK;AAAA,QAC7B,KAAK;AACH,iBAAO,SAAS,WAAW,MAAM,OAAO,IAAI,KAAK;AACjD;AAAA,QACF,KAAK;AACH,iBAAO,SAAS,SAAS,MAAM,OAAO,IAAI,KAAK;AAC/C;AAAA,QACF,KAAK;AACH,iBAAO,SAAS,QAAQ,MAAM,OAAO,IAAI,KAAK;AAC9C;AAAA,QACF,KAAK;AACH,iBAAO,SAAS,WAAW,MAAM,OAAO,IAAI,KAAK;AACjD;AAAA,MACN;AAEE,UAAI,aAAa,UAAU,OAAO;AAChC,YAAI,SAAS,KAAK,SAAS,SAAS,IAAI,GAAG;AAC3C,eAAO,QAAQ,UAAU,QAAQ,OAAO,YAAW,IAAK;AAAA,MAC5D,OAAS;AACL,eAAO,QAAQ,KAAK,SAAS,SAAS,IAAI,MAAM;AAAA,MACpD;AAAA,IACA;AAUA,UAAM,CAAC,KAAK,OAAO,mBAAmB,cAAc,SAAS,GAAG,aAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjQ7E,UAAM,EAAE,YAAa,IAAG,WAAY;AAEpC,UAAM,EAAE,EAAG,IAAG,QAAQ;AAAA,MACpB,UAAU;AAAA,IACZ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC2BD,UAAM,EAAE,EAAG,IAAG,QAAQ;AAAA,MACpB,UAAU;AAAA,IACZ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9CD,UAAM,EAAE,EAAG,IAAG,QAAQ;AAAA,MACpB,UAAU;AAAA,IACZ,CAAC;AAGD,iBAAa,YAAY,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}